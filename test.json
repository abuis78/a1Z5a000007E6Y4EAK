{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_4_to_port_5",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_7_to_port_4",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_5_to_port_6",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_0_to_port_3",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_3_to_port_9",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                }
            ],
            "hash": "971c303015f80c7862a97f434d3100337ed128e8",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 940,
                    "y": 359.9999999999999
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 1400,
                    "y": 1120
                },
                "3": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Vault Artifact"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Vault Artifact",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_1",
                        "id": "3",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "filter",
                    "x": 980,
                    "y": 524.5
                },
                "4": {
                    "data": {
                        "advanced": {
                            "customName": "endpoint",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "endpoint",
                        "id": "4",
                        "parameters": [],
                        "template": "/servicesNS/nobody/soar/storage/collections/data/kokoloris/batch_save",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "format",
                    "x": 740,
                    "y": 940
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "payload",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "payload",
                        "id": "5",
                        "parameters": [],
                        "template": "[ { \"pool\": 1.0,\"virtualmachine\": \"Pankaj\",\"user\": \"CEO\" } ]",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "format",
                    "x": 740,
                    "y": 1060
                },
                "6": {
                    "data": {
                        "action": "post data",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "splunk_rest"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "post_data_1",
                        "id": "6",
                        "parameters": {
                            "body": "payload:formatted_data",
                            "headers": "{ \"Content-Type\": \"application/json\" }",
                            "location": "endpoint:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "location"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "action",
                    "x": 740,
                    "y": 1204.5
                },
                "7": {
                    "data": {
                        "advanced": {
                            "customName": "header",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "header",
                        "id": "7",
                        "parameters": [],
                        "template": "{{ 'Content-Type': 'application/json' }}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "format",
                    "x": 740,
                    "y": 800
                },
                "8": {
                    "data": {
                        "action": "delete data",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "splunk_rest"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "delete_data_1",
                        "id": "8",
                        "parameters": {
                            "headers": "{ \"Content-Type\": \"application/json\" }",
                            "location": "endpoint:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "location"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "action",
                    "x": 1000,
                    "y": 1184.5
                },
                "9": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "excel_to_json",
                            "repoName": "a1Z5a000007E6Y4EAK"
                        },
                        "functionId": 2,
                        "functionName": "excel_to_json_2",
                        "id": "9",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "excel_to_json": {
                                "description": "",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "vault_id",
                                        "name": "vault_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "container_id",
                                        "name": "container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "excel_to_json",
                                "name": "excel_to_json"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "excel_to_json": {
                                "container_id": "container:id",
                                "vault_id": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "9",
                    "type": "utility",
                    "x": 920,
                    "y": 680
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.8",
        "version": "5.4.0.101028"
    },
    "create_time": "2023-01-19T14:09:15.275472+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}